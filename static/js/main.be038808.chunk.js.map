{"version":3,"sources":["components/Nav_bar.js","components/textform.js","App.js","reportWebVitals.js","index.js"],"names":["NaviBar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","AboutText","role","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","settext","_useState3","_useState4","namer","setname","style","color","heading","value","onChange","event","target","row","backgroundColor","newText","toUpperCase","tet","toLowerCase","cols","rows","ice","App","setMode","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.be038808.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function NaviBar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"\">{props.AboutText}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">Link</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\" /></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n      <div className={`HTMLform-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n      \r\n    </div>\r\n  </div>\r\n</nav> \r\n    </>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nexport default function TextForm(props){\r\n    const handleUpClick=() =>{\r\n        let newText=text.toUpperCase();\r\n        settext(newText);\r\n    }\r\n    const handleOnChange=(event) =>{\r\n        settext(event.target.value)\r\n    }\r\n    const LowerCase=()=>{\r\n        let tet=text.toLowerCase()\r\n        settext(tet)\r\n    }\r\n    const [text,settext]=useState(\"Enter the Text\")\r\n\r\n    function clr(event){\r\n        settext(\"\")\r\n    }\r\n    let [namer,setname]=useState(\"enter your name\")\r\n    let count=0;\r\n    const store=(ice)=>{\r\n            setname(ice.target.value);\r\n    }\r\n    const proceed=(event)=>{\r\n        setname=(\"\")\r\n    }\r\n\r\n return(\r\n    <>\r\n    <div>\r\n        <h1 style={{color:props.mode===\"dark\"?\"red\":\"black\"}}>{props.heading}</h1>\r\n        <textarea className=\"form-control\"  value={text} onChange={handleOnChange} row=\"8\" style={{backgroundColor: props.mode===\"dark\"?\"grey\":\"white\",color:props.mode===\"dark\"?\"white\":\"black\"}}> \r\n        </textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert To Upper Case</button>\r\n    <button className=\"btn btn-primary\" onClick={LowerCase}>Convert To lower Case</button>\r\n    <button className=\"btn btn-primary, mx-25\" onClick={clr} style={{color:props.mode===\"dark\"?\"red\":\"black\"}}>clear text</button>\r\n    <div>\r\n        <textarea id=\"\" cols=\"200\" rows=\"5\" value={namer} onChange={store} style={{backgroundColor: props.mode===\"dark\"?\"grey\":\"white\",color:props.mode===\"dark\"?\"white\":\"black\"}} ></textarea>\r\n        <button className=\"btn btn-secondary\" onClick={proceed}>Proceed</button>\r\n\r\n    </div>\r\n    </>\r\n )   \r\n}","import './App.css';\nimport NaviBar from './components/Nav_bar';\nimport TextForm from './components/textform';\nimport React,{useState} from 'react';\n\n\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const [alert,setalert]=useState('null');\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor=\"#22384c\";\n      document.title=\"TextUtil-dark-mode\"\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      document.title=\"TextUtil-light-mode\"\n    }\n  }\n  return (\n    <>\n    \n    <NaviBar title=\"Divyansh Gupta\" AboutText=\"About\" mode={mode} toggleMode={toggleMode} /> \n   \n    <TextForm mode={mode} toggleMode={toggleMode} />\n       \n    \n    \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}